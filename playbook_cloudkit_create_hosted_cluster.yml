---
- name: Create a hosted control plane cluster from a ClusterOrder
  hosts: localhost
  gather_facts: false
  environment:
    OS_CLOUD: "{{ openstack_cloud_name|default('devstack') }}"

  vars:
    cluster_order: "{{ ansible_eda.event.payload }}"

  pre_tasks:
    - name: Set cluster order name
      ansible.builtin.set_fact:
        cluster_order_name: "{{ cluster_order.metadata.name }}"

    - name: Set lock name and holder identity
      ansible.builtin.set_fact:
        cluster_order_lock_name: "{{ cluster_order_name }}-lock"
        cluster_order_holder_id: >-
          {{ cluster_order_name }}-{{ awx_job_id | default("unknown") }}-{{
            lookup('community.general.random_string', special=false, numbers=false, upper=false)
          }}

    - name: Cluster order before defaults
      ansible.builtin.debug:
        var: cluster_order

    - name: Apply default settings
      ansible.builtin.include_role:
        name: cloudkit.service.cluster_settings

    - name: Cluster order after defaults
      ansible.builtin.debug:
        var: cluster_order

    - name: Extract template info
      ansible.builtin.include_role:
        name: cloudkit.service.extract_template_info

    - name: Determine working namespace
      ansible.builtin.include_role:
        name: cloudkit.service.cluster_working_namespace
      vars:
        cluster_working_namespace_cluster_order_name: "{{ cluster_order_name }}"

  tasks:
    - name: Create cluster
      block:

        # By using service_side_apply and registering this job run as the
        # field manager, we ensure that future attempts to create/modify
        # this lock will fail (because of the conflict setting
        # spec.holderIdentity).
        - name: Acquire lock
          kubernetes.core.k8s:
            state: present
            apply: true
            server_side_apply:
              field_manager: "{{ cluster_order_holder_id }}"
            definition:
              apiVersion: coordination.k8s.io/v1
              kind: Lease
              metadata:
                name: "{{ cluster_order_lock_name }}"
                namespace: "{{ cluster_working_namespace }}"
                labels:
                  cloudkit.openshift.io/aap-job-id: "job-{{ awx_job_id | default('unknown') }}"
              spec:
                holderIdentity: "{{ cluster_order_holder_id }}"

        - name: Set lock_acquired
          ansible.builtin.set_fact:
            lock_acquired: true

        - name: Display cluster order information
          ansible.builtin.debug:
            msg:
              - "Cluster order: {{ cluster_order_name }}"
              - "Cluster working namespace: {{ cluster_working_namespace }}"
              - "Template ID: {{ template_id }}"

        - name: Call the selected template
          ansible.builtin.include_role:
            name: "{{ template_id }}"
            tasks_from: "install"

      rescue:

        - name: Exit due to lock failure
          when: not lock_acquired | default(false)
          ansible.builtin.meta: end_play

        # Without this, a failure in the template would show up as
        # a successful job run.
        - name: Propagate failure
          ansible.builtin.fail:
            msg: Propagating earlier failure from rescue block

      always:

        - name: Delete lock
          when: lock_acquired | default(false)
          kubernetes.core.k8s:
            state: absent
            definition:
              apiVersion: coordination.k8s.io/v1
              kind: Lease
              metadata:
                name: "{{ cluster_order_lock_name }}"
                namespace: "{{ cluster_working_namespace }}"
