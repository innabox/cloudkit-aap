---
- name: List agents currently labeled with the cluster order label
  kubernetes.core.k8s_info:
    kind: Agent
    api_version: agent-install.openshift.io/v1beta1
    namespace: "{{ default_agent_namespace }}"
    label_selectors:
      - "{{ cluster_order_label }}={{ manage_agents_cluster_order_name }}"
      - "{{ esi_agent_resource_class_label }}={{ manage_agents_resource_class }}"
  register: manage_agents_allocated

- name: Add agents to the cluster
  when: (manage_agents_desired_count | int) > (manage_agents_allocated.resources | length)
  block:
    # Since there is only one global pool of agents, we need to make sure that
    # the selection of new agents is serialized by resource class
    - name: Acquire agent lock
      kubernetes.core.k8s:
        state: present
        apply: true
        server_side_apply:
          field_manager: "{{ cluster_order_holder_id }}"
        definition:
          apiVersion: coordination.k8s.io/v1
          kind: Lease
          metadata:
            name: "agent-{{ manage_agents_resource_class }}-lock"
            namespace: "{{ default_agent_namespace }}"
            labels:
              cloudkit.openshift.io/aap-job-id: "job-{{ awx_job_id | default('unknown') }}"
          spec:
            holderIdentity: "{{ cluster_order_holder_id }}"
      register: manage_agents_lease
      until: manage_agents_lease is successful
      retries: 20
      delay: 5

    - name: Retrieve the list of available agents with a matching machine resource class
      kubernetes.core.k8s_info:
        kind: Agent
        api_version: agent-install.openshift.io/v1beta1
        namespace: "{{ default_agent_namespace }}"
        label_selectors:
          - "!{{ cluster_order_label }}"
          - "{{ esi_agent_resource_class_label }}={{ manage_agents_resource_class }}"
      register: manage_agents_available

    # Agents may be picked-up outside of the fulfillment API, so we need to exclude them
    - name: Filter out agents already allocated to a cluster
      ansible.builtin.set_fact:
        manage_agents_available: >
          {{ manage_agents_available.resources
          | selectattr('spec.clusterDeploymentName.name', 'undefined') }}

    - name: Count the number of agents to add to the cluster
      ansible.builtin.set_fact:
        manage_agents_selected_count: >
          {{ manage_agents_desired_count | int - manage_agents_allocated.resources | length }}

    - name: Display agent counts
      ansible.builtin.debug:
        msg: "We have {{ manage_agents_allocated.resources | length }} agents, we want {{ manage_agents_desired_count }}"

    - name: Add selected agents to the cluster
      kubernetes.core.k8s_json_patch:
        api_version: agent-install.openshift.io/v1beta1
        kind: Agent
        name: "{{ agent.metadata.name }}"
        namespace: "{{ agent.metadata.namespace }}"
        patch:
          - op: add
            path: /metadata/labels/{{ cluster_order_label | cloudkit.service.json_pointer_escape }}
            value: "{{ manage_agents_cluster_order_name }}"
          - op: add
            path: /spec/approved
            value: false
      loop: "{{ manage_agents_available[: (manage_agents_selected_count | int)] }}"
      loop_control:
        loop_var: agent
        label: "Adding agent {{ agent.metadata.name }}"
      register: manage_agents_added

    - name: Added agent list
      ansible.builtin.set_fact:
        manage_agents_added: >
          {{ manage_agents_added.results | selectattr('changed') | map(attribute='agent') }}

    - name: Print a message if not all agents were added
      ansible.builtin.debug:
        msg: "{{ manage_agents_added | length }} agents were added to the cluster instead of {{ manage_agents_selected_count }}. Please check agents availability."
      when: manage_agents_added | length != manage_agents_selected_count | int

  always:

    - name: Delete agent lock
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: coordination.k8s.io/v1
          kind: Lease
          metadata:
            name: "agent-{{ manage_agents_resource_class }}-lock"
            namespace: "{{ default_agent_namespace }}"
