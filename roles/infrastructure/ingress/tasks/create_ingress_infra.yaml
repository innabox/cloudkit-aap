- name: Wait until agents are available
  kubernetes.core.k8s_info:
    api_version: agent-install.openshift.io/v1beta1
    kind: Agent
    namespace: "hardware-inventory"
    label_selectors:
    - "cloudkit.openshift.io/clusterorder={{ hosted_cluster_name }}"
  register: agents

  # wait until agents are assigned to the cluster
  until: agents.resources
  retries: "{{ agent_wait_retries | default(infrastructure_resource_wait_retries) }}"
  delay: "{{ agent_wait_delay | default(infrastructure_resource_wait_delay) }}"

- name: Set worker_node_ip
  ansible.builtin.set_fact:
    worker_node_ip: >-
      {{
      agents |
      json_query('resources[*].status.inventory.interfaces[?ipV4Addresses][].ipV4Addresses[]') |
      shuffle |
      first |
      ansible.utils.ipaddr('address')
      }}

- name: Allocate ingress floating ip
  ansible.builtin.include_role:
    name: massopencloud.esi.floating_ip
    tasks_from: allocate_floating_ip.yaml
  vars:
    floating_ip_name: "{{ hosted_cluster_name }}-ingress"  # noqa:var-naming[no-role-prefix]

- name: Set ingress_floating_ip
  ansible.builtin.set_fact:
    ingress_floating_ip: "{{ allocate_floating_ip_result }}"

- name: Create port forwarding for ingress  # noqa:no-changed-when
  ansible.builtin.command: >-
    openstack esi port forwarding create {{ worker_node_ip }} {{ ingress_floating_ip }}
      -p 80 -p 443 -d "{{ hosted_cluster_name }}-ingress" -f json
  register: create_forwarding
  failed_when: >-
    create_forwarding.rc != 0 and "duplicate port forwarding" not in create_forwarding.stderr

- name: Create ingress dns record
  amazon.aws.route53:
    state: present
    zone: "{{ hosted_cluster_settings.base_domain }}"
    record: "*.apps.{{ hosted_cluster_name }}.{{ hosted_cluster_settings.base_domain }}"
    type: A
    ttl: "{{ infrastructure_dns_ttl }}"
    value: "{{ ingress_floating_ip }}"
    wait: true
    overwrite: true
